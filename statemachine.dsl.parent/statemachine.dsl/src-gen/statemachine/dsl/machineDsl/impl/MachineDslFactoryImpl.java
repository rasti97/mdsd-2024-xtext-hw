/**
 * generated by Xtext 2.31.0
 */
package statemachine.dsl.machineDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import statemachine.dsl.machineDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MachineDslFactoryImpl extends EFactoryImpl implements MachineDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MachineDslFactory init()
  {
    try
    {
      MachineDslFactory theMachineDslFactory = (MachineDslFactory)EPackage.Registry.INSTANCE.getEFactory(MachineDslPackage.eNS_URI);
      if (theMachineDslFactory != null)
      {
        return theMachineDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MachineDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MachineDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MachineDslPackage.MACHINE: return createMachine();
      case MachineDslPackage.FIELD: return createField();
      case MachineDslPackage.STATE: return createState();
      case MachineDslPackage.ENTRY: return createEntry();
      case MachineDslPackage.EXIT: return createExit();
      case MachineDslPackage.EVENT: return createEvent();
      case MachineDslPackage.COMMAND: return createCommand();
      case MachineDslPackage.JUMP: return createJump();
      case MachineDslPackage.PRINT: return createPrint();
      case MachineDslPackage.PRINT_ARGUMENT: return createPrintArgument();
      case MachineDslPackage.STRING_ARGUMENT: return createStringArgument();
      case MachineDslPackage.FIELD_REFERENCE: return createFieldReference();
      case MachineDslPackage.INCREMENT_FIELD: return createIncrementField();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Machine createMachine()
  {
    MachineImpl machine = new MachineImpl();
    return machine;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Field createField()
  {
    FieldImpl field = new FieldImpl();
    return field;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public State createState()
  {
    StateImpl state = new StateImpl();
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entry createEntry()
  {
    EntryImpl entry = new EntryImpl();
    return entry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Exit createExit()
  {
    ExitImpl exit = new ExitImpl();
    return exit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Command createCommand()
  {
    CommandImpl command = new CommandImpl();
    return command;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Jump createJump()
  {
    JumpImpl jump = new JumpImpl();
    return jump;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Print createPrint()
  {
    PrintImpl print = new PrintImpl();
    return print;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrintArgument createPrintArgument()
  {
    PrintArgumentImpl printArgument = new PrintArgumentImpl();
    return printArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringArgument createStringArgument()
  {
    StringArgumentImpl stringArgument = new StringArgumentImpl();
    return stringArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldReference createFieldReference()
  {
    FieldReferenceImpl fieldReference = new FieldReferenceImpl();
    return fieldReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IncrementField createIncrementField()
  {
    IncrementFieldImpl incrementField = new IncrementFieldImpl();
    return incrementField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MachineDslPackage getMachineDslPackage()
  {
    return (MachineDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MachineDslPackage getPackage()
  {
    return MachineDslPackage.eINSTANCE;
  }

} //MachineDslFactoryImpl
